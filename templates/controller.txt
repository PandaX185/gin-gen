package packageName

import (
    "github.com/gin-gonic/gin"
    "net/http"
    "strconv"
)

type ModelController struct {
    service *ModelService
}

func NewModelController(service *ModelService) *ModelController {
    return &ModelController{service}
}

func (c *ModelController) CreateModel(ctx *gin.Context) {
    var body *Model
    if err := ctx.ShouldBindJSON(&body); err != nil {
        ctx.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
        return
    }

    var (
        result *Model
        err    error
    )
    if result, err = c.service.CreateModel(body); err != nil {
        ctx.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
        return
    }

    ctx.JSON(http.StatusCreated, result)
}

func (c *ModelController) GetModel(ctx *gin.Context) {
    var (
        result *Model
        err    error
    )

    id ,err := strconv.ParseInt(ctx.Param("id"), 10, 32)
    if err != nil {
        ctx.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
        return
    }
    if result, err = c.service.GetModel(int(id)); err != nil {
        ctx.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
        return
    }

    ctx.JSON(http.StatusOK, result)
}

func (c *ModelController) GetModels(ctx *gin.Context) {
    var (
        result []*Model
        err    error
    )

    if result, err = c.service.GetModels(); err != nil {
        ctx.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
        return
    }

    ctx.JSON(http.StatusOK, result)
}

func (c *ModelController) UpdateModel(ctx *gin.Context) {
    var body *Model
    if err := ctx.ShouldBindJSON(&body); err != nil {
        ctx.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
        return
    }

    id ,err := strconv.ParseInt(ctx.Param("id"), 10, 32)
    if err != nil {
        ctx.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
        return
    }
    body.ID = uint(id)

    var result *Model

    if result, err = c.service.UpdateModel(body); err != nil {
        ctx.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
        return
    }

    ctx.JSON(http.StatusOK, result)
}

func (c *ModelController) DeleteModel(ctx *gin.Context) {
    var (
        err error
    )

     id ,err := strconv.ParseInt(ctx.Param("id"), 10, 32)
    if err != nil {
        ctx.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
        return
    }

    if err = c.service.DeleteModel(int(id)); err != nil {
        ctx.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
        return
    }

    ctx.JSON(http.StatusOK, gin.H{"message": "deleted"})
}
